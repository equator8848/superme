package com.leetcode;

import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

/**
 * @Author: Equator
 * @Date: 2020/1/23 21:00
 **/

public class Problem874 {

    public int robotSim(int[] commands, int[][] obstacles) {
        int ans = 0;
        int[][] direction = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        int direction_idx = 0;
        int x = 0, y = 0;
        // 将障碍物保存为set，方便后续查找
        Set<String> obstacleSet = new HashSet<>();
        for (int i = 0; i < obstacles.length; i++) {
            // 为什么不能以""作为分隔符呢，1 20 与 12 0 拼接结果一样了
            obstacleSet.add(obstacles[i][0] + "" + obstacles[i][1]);
        }
        for (int i = 0; i < commands.length; i++) {
            if (commands[i] == -1) {
                direction_idx = (direction_idx + 1) % 4;
            } else if (commands[i] == -2) {
                direction_idx = (direction_idx + 3) % 4;
            } else if (commands[i] > 0) {
                for (int s = 1; s <= commands[i]; s++) {
                    int next_x = x + direction[direction_idx][0];
                    int next_y = y + direction[direction_idx][1];
                    if (obstacleSet.contains(next_x + "" + next_y)) {
                        // 执行下一条命令
                        break;
                    } else {
                        x = next_x;
                        y = next_y;
                        ans = Math.max(ans, x * x + y * y);
                    }
                }
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        new Problem874().test1();
    }


    public void test1() {
        int[][] obstacles = {{97, -2}, {-65, 69}, {0, -19}, {99, 96}, {-89, -97}, {82, 50}, {-88, -5}, {-83, 17}, {-85, -6}, {15, 58}, {-89, 86}, {12, 41}, {-84, 2}, {-92, -45}, {-96, 4}, {-14, 29}, {-94, 76}, {40, -89}, {75, -29}, {-96, -83}, {-99, -79}, {-2, 88}, {-55, 30}, {-94, -11}, {42, 83}, {99, -5}, {15, 92}, {-38, -49}, {61, -50}, {52, 97}, {97, -31}, {-64, -65}, {-1, -25}, {-46, 97}, {75, -74}, {60, -74}, {-15, 2}, {-88, -61}, {-16, -31}, {-100, 74}, {29, -98}, {-79, -57}, {-47, -94}, {-38, -40}, {-92, -39}, {15, 96}, {-28, 86}, {78, 94}, {-1, 19}, {-70, 54}, {54, -40}, {-10, 43}, {-32, 9}, {13, 36}, {55, -51}, {-93, 45}, {57, 57}, {78, 13}, {74, -7}, {-45, -29}, {-45, -76}, {-2, 6}, {28, 49}, {79, 8}, {-81, -52}, {-67, -41}, {-7, -43}, {-60, 29}, {8, 39}, {48, -10}, {35, -8}, {-84, 4}, {0, 32}, {43, 91}, {37, 89}, {-60, 34}, {92, 77}, {61, -63}, {-92, 24}, {-41, 65}, {77, -65}, {74, 99}, {0, 26}, {-31, -57}, {40, 94}, {-78, -10}, {-89, -37}, {-19, 25}, {-62, 27}, {-83, 53}, {69, -43}, {-21, 13}, {-90, -90}, {86, 20}, {63, 43}, {81, 73}, {-9, -100}, {62, 62}, {16, 10}, {34, -38}, {-89, -57}, {74, 49}, {42, -44}, {18, 97}, {-80, -58}, {17, 61}, {42, 51}, {-57, -64}, {-80, 36}, {-60, 57}, {25, 62}, {-42, 20}, {-100, 95}, {7, -24}, {-98, 84}, {49, 83}, {-83, 42}, {9, 97}, {39, -7}, {-100, 9}, {-39, -38}, {-15, 10}, {84, -93}, {16, 85}, {-35, 82}, {-92, 14}, {86, 5}, {32, -100}, {-23, -35}, {-80, -32}, {-1, 26}, {-68, 52}, {-5, -59}, {63, -28}, {26, -65}, {-42, 9}, {36, 42}, {-9, -18}, {19, 96}, {19, -99}, {66, 94}, {18, -53}, {49, 100}, {8, -14}, {-1, 9}, {-81, 56}, {96, -94}, {6, 30}, {71, 39}, {71, -73}, {41, -9}, {-91, 93}, {99, -59}, {-56, -64}, {32, -16}, {-8, 56}, {-27, 2}, {-31, 89}, {98, 49}, {0, -86}, {86, 95}, {-52, 66}, {9, 26}, {89, -51}, {-77, -22}, {34, -32}, {-22, -41}, {40, -72}, {-61, 62}, {22, -62}, {72, 91}, {81, -33}, {-25, 60}, {20, 64}, {93, 100}, {73, 22}, {-39, 57}, {55, 51}, {-12, -49}, {-84, 99}, {-59, 39}, {23, 86}, {-53, -100}, {-12, -31}, {-20, 65}, {-98, -39}, {69, 59}, {-33, -32}, {63, 26}, {-90, 27}, {33, 71}, {37, 88}, {-73, -47}, {2, 35}, {57, -88}, {-83, 46}, {92, 76}, {-29, 10}, {-73, 51}, {4, -22}};
        for (int i = 0; i < obstacles.length; i++) {
            String t1 = obstacles[i][0] + "," + obstacles[i][1];
            String t2 = obstacles[i][0] + "" + obstacles[i][1];
            // 如果没有输出，则说明两个方式拼接出来得字符串效果相等？
            if (!(t1.replace(",", "").equals(t2))) {
                System.out.println(t1);
                System.out.println(t2);
            }
        }
    }

    public void test2() {
        int[] commands = {9, 8, 4, 8, 1, 6, 3, -2, -2, -1, 4, 6, 3, -1, 5, 3, 8, 6, 2, 5, -2, 7, 8, -2, 4, 5, 2, 7, 3, 4, 8, 6, 5, 6, 6, -1, -1, -1, 6, 9, -1, -2, -2, 2, 3, -1, 5, 5, -1, -1, 1, 8, -1, 1, -1, 1, 6, 2, -1, 6, 4, 7, 3, 6, 7, -2, 9, 8, -1, 4, -2, 6, 1, 3, 5, 5, 6, -1, 6, -2, -1, -1, -2, -2, 6, 3, -1, -2, 7, 1, 7, 3, 2, 7, 4, 7, 4, 8, -1, 1};
        int[][] obstacles = {{97, -2}, {-65, 69}, {0, -19}, {99, 96}, {-89, -97}, {82, 50}, {-88, -5}, {-83, 17}, {-85, -6}, {15, 58}, {-89, 86}, {12, 41}, {-84, 2}, {-92, -45}, {-96, 4}, {-14, 29}, {-94, 76}, {40, -89}, {75, -29}, {-96, -83}, {-99, -79}, {-2, 88}, {-55, 30}, {-94, -11}, {42, 83}, {99, -5}, {15, 92}, {-38, -49}, {61, -50}, {52, 97}, {97, -31}, {-64, -65}, {-1, -25}, {-46, 97}, {75, -74}, {60, -74}, {-15, 2}, {-88, -61}, {-16, -31}, {-100, 74}, {29, -98}, {-79, -57}, {-47, -94}, {-38, -40}, {-92, -39}, {15, 96}, {-28, 86}, {78, 94}, {-1, 19}, {-70, 54}, {54, -40}, {-10, 43}, {-32, 9}, {13, 36}, {55, -51}, {-93, 45}, {57, 57}, {78, 13}, {74, -7}, {-45, -29}, {-45, -76}, {-2, 6}, {28, 49}, {79, 8}, {-81, -52}, {-67, -41}, {-7, -43}, {-60, 29}, {8, 39}, {48, -10}, {35, -8}, {-84, 4}, {0, 32}, {43, 91}, {37, 89}, {-60, 34}, {92, 77}, {61, -63}, {-92, 24}, {-41, 65}, {77, -65}, {74, 99}, {0, 26}, {-31, -57}, {40, 94}, {-78, -10}, {-89, -37}, {-19, 25}, {-62, 27}, {-83, 53}, {69, -43}, {-21, 13}, {-90, -90}, {86, 20}, {63, 43}, {81, 73}, {-9, -100}, {62, 62}, {16, 10}, {34, -38}, {-89, -57}, {74, 49}, {42, -44}, {18, 97}, {-80, -58}, {17, 61}, {42, 51}, {-57, -64}, {-80, 36}, {-60, 57}, {25, 62}, {-42, 20}, {-100, 95}, {7, -24}, {-98, 84}, {49, 83}, {-83, 42}, {9, 97}, {39, -7}, {-100, 9}, {-39, -38}, {-15, 10}, {84, -93}, {16, 85}, {-35, 82}, {-92, 14}, {86, 5}, {32, -100}, {-23, -35}, {-80, -32}, {-1, 26}, {-68, 52}, {-5, -59}, {63, -28}, {26, -65}, {-42, 9}, {36, 42}, {-9, -18}, {19, 96}, {19, -99}, {66, 94}, {18, -53}, {49, 100}, {8, -14}, {-1, 9}, {-81, 56}, {96, -94}, {6, 30}, {71, 39}, {71, -73}, {41, -9}, {-91, 93}, {99, -59}, {-56, -64}, {32, -16}, {-8, 56}, {-27, 2}, {-31, 89}, {98, 49}, {0, -86}, {86, 95}, {-52, 66}, {9, 26}, {89, -51}, {-77, -22}, {34, -32}, {-22, -41}, {40, -72}, {-61, 62}, {22, -62}, {72, 91}, {81, -33}, {-25, 60}, {20, 64}, {93, 100}, {73, 22}, {-39, 57}, {55, 51}, {-12, -49}, {-84, 99}, {-59, 39}, {23, 86}, {-53, -100}, {-12, -31}, {-20, 65}, {-98, -39}, {69, 59}, {-33, -32}, {63, 26}, {-90, 27}, {33, 71}, {37, 88}, {-73, -47}, {2, 35}, {57, -88}, {-83, 46}, {92, 76}, {-29, 10}, {-73, 51}, {4, -22}};
        System.out.println(new Problem874().robotSim(commands, obstacles));
    }
}
